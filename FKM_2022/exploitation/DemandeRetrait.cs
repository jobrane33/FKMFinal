using FKM_2022.crudAlgoClasses;
using FKM_2022.PDFviewers;
using FKM_2022.referntiel;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.SqlClient;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;


namespace FKM_2022.exploitation
{
    public partial class DemandeRetrait : Form
    {
        public static int codeforPDF = 0;
        private string matricule = connection.getMatricule;
        private string nomPrenom = connection.getNomPrenom;
        public DemandeRetrait()
        {
            InitializeComponent();
            dataGridView1.RowTemplate.Height = 40;
        }

        public static int getcodeDemandeForAdmin
        {
            get { return codeforPDF; }
        }
        private void DemandeRetrait_Load(object sender, EventArgs e)
        {
            using (SqlConnection sqlConnection = new SqlConnection("Data Source=DESKTOP-MOT8LB0;Initial Catalog=FKM;Integrated Security=True"))
            {
                SqlCommand sqlCmd = new SqlCommand("(select matricule ,concat(nom,' ',prenom,' ',matricule) as perso  from personnels where SuperieurhearchiqueDevalidation='" + matricule + "') union ( select matricule , concat(nom,' ',prenom,' ',matricule) as perso from personnels where matricule='" + matricule + "')", sqlConnection);
                SqlDataAdapter da = new SqlDataAdapter();
                da.SelectCommand = sqlCmd;
                DataTable dt2 = new DataTable();
                da.Fill(dt2);
                comboBox1.DataSource = dt2;
                comboBox1.DisplayMember = "perso";
                comboBox1.ValueMember = "matricule";
                //comboBox2.Items.Add(user + " " + matricule);
                sqlConnection.Open();
                //label1.Text = matricule.ToString();
                comboBox1.Text = "";
            }
            if (comboBox1.Text == "")
            {
                crudUser cru = new crudUser();
                DataTable dt = new DataTable();
                dt = cru.afficheDemandesAdmin();
                dataGridView1.DataSource = dt;
            }
        }

        private void comboBox1_SelectedIndexChanged(object sender, EventArgs e)
        {
            crudUser cru = new crudUser();
            DataTable dt = new DataTable();
            dt = cru.filtrageDemandesRetraitAdmin(comboBox1.SelectedValue.ToString());
            dataGridView1.DataSource = dt;
        }

        private void dataGridView1_CellContentClick(object sender, DataGridViewCellEventArgs e)
        {
            if (dataGridView1.Columns[e.ColumnIndex].HeaderText == "selectionner pour affichage")
            {
                string pdfstring = dataGridView1.Rows[e.RowIndex].Cells["code"].Value.ToString();
                int codepdf = int.Parse(pdfstring);
                codeforPDF = codepdf;
                //label2.Text = pdfstring;

            }
        }

        private void roundBtn2_Click(object sender, EventArgs e)
        {

        }

        private void pictureBox3_Click(object sender, EventArgs e)
        {
            if (uperPannel.Visible)
            {
                uperPannel.Hide();
            }
            else
            {
                uperPannel.Show();
            }
        }

        private void roundBtn3_Click(object sender, EventArgs e)
        {
            if (codeforPDF == 0)
            {
                MessageBox.Show("erreur", "selectionner un contrat!");
            }
            else
            {
                DemandeRetraitPDFViewer cpdfv = new DemandeRetraitPDFViewer();
                cpdfv.Show();
                cpdfv.StartPosition = FormStartPosition.CenterScreen;
                cpdfv.WindowState = FormWindowState.Maximized;
                codeforPDF = 0;
            }
        }

        private void roundBtn1_Click(object sender, EventArgs e)
        {

        }
    }
}
